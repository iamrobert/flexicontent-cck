@import 'include/config.less';

/* Blog Theme : item template CSS file */


/********************************************************************/
/*** Part 1, CSS rules for fields display via Template parameters ***/
/********************************************************************/

/* LESS EXAMPLE variable name: 'FCI_' + parameter name */
/* e.g. 'FCI_' + 'title_color' =>  'FCI_title_color' */
body #flexicontent .fc_item_title,
body #flexicontent .fc_item_title a {
	color: @FCI_title_color;
	background-color: @FCI_title_bg_color;
	padding-top: @FCI_title_pad_top + px ;
	padding-right: @FCI_title_pad_right + px;
	padding-left: @FCI_title_pad_left + px;
	padding-bottom: @FCI_title_pad_bottom + px;
	border-radius: @FCI_title_border_radius + px;
}

/* background item */
.fcitems {
	background-color: @FCI_item_bg_color;
	padding-top: @FCI_item_pad_top + px ;
	padding-right: @FCI_item_pad_right + px;
	padding-left: @FCI_item_pad_left + px;
	padding-bottom: @FCI_item_pad_bottom + px;
	border-radius: @FCI_item_border_radius + px;
	border: @FCI_item_border_size + px @FCI_item_border_type @FCI_item_border_color;
	color:@FCI_item_text_color;
}

/* Label styling */

body #flexicontent .flexi.label,
body #flexicontent .desc-title.label {
	background-color: @FCI_label_bg_color;
	color: @FCI_label_txt_color;
	border-radius: @FCI_label_radius*1px;
	padding-top: @FCI_label_pad_top + px ;
	padding-right: @FCI_label_pad_right + px;
	padding-left: @FCI_label_pad_left + px;
	padding-bottom: @FCI_label_pad_bottom + px;
}

/* beforedescription block */
body #flexicontent .customblock.beforedescription.group {
    background-color: @FCI_beforedesc_bg_color;
		padding-top: @FCI_beforedesc_pad_top + px !important;
		padding-right: @FCI_beforedesc_pad_right + px !important;
		padding-left: @FCI_beforedesc_pad_left + px !important;
		padding-bottom: @FCI_beforedesc_pad_bottom + px !important;
    color: @FCI_beforedesc_txt_color;
		border-radius: @FCI_beforedesc_border_radius + px;
		border: @FCI_beforedesc_border_size + px @FCI_beforedesc_border_type @FCI_beforedesc_border_color;
		margin-top: @FCI_beforedesc_margin_top + px !important;
		margin-right: @FCI_beforedesc_margin_right + px !important;
		margin-left: @FCI_beforedesc_margin_left + px !important;
		margin-bottom: @FCI_beforedesc_margin_bottom + px !important;
}
/* description */
body #flexicontent .description.group {
	background-color: @FCI_desc_bg_color;
	padding-top: @FCI_desc_pad_top + px !important;
	padding-right: @FCI_desc_pad_right + px !important;
	padding-left: @FCI_desc_pad_left + px !important;
	padding-bottom: @FCI_desc_pad_bottom + px !important;
	color: @FCI_desc_txt_color;
	border-radius: @FCI_desc_border_radius + px;
	border: @FCI_desc_border_size + px @FCI_desc_border_type @FCI_desc_border_color;
	margin-top: @FCI_desc_margin_top + px !important;
	margin-right: @FCI_desc_margin_right + px !important;
	margin-left: @FCI_desc_margin_left + px !important;
	margin-bottom: @FCI_desc_margin_bottom + px !important;
}

/* beforedescription block */
body #flexicontent .customblock.afterdescription.group {
    background-color: @FCI_afterdesc_bg_color;
		padding-top: @FCI_afterdesc_pad_top + px !important;
		padding-right: @FCI_afterdesc_pad_right + px !important;
		padding-left: @FCI_afterdesc_pad_left + px !important;
		padding-bottom: @FCI_afterdesc_pad_bottom + px !important;
    color: @FCI_afterdesc_txt_color;
		border-radius: @FCI_afterdesc_border_radius + px;
		border: @FCI_afterdesc_border_size + px @FCI_afterdesc_border_type @FCI_afterdesc_border_color;
		margin-top: @FCI_afterdesc_margin_top + px !important;
		margin-right: @FCI_afterdesc_margin_right + px !important;
		margin-left: @FCI_afterdesc_margin_left + px !important;
		margin-bottom: @FCI_afterdesc_margin_bottom + px !important;
}

.iteminfo .createdline,
.iteminfo .modifiedline {
	font-size: 90%;
	display: block;
}

.iteminfo .createdby,
.iteminfo .modifiedby {
	font-size: 90%;
	font-weight: normal;
	display: inline-block;
}

.iteminfo .created,
.iteminfo .modified {
	font-size: 90%;
	font-weight: bold;
	display: inline-block;
}

.itemactions,
.iteminfo,
.itemadditional,
.description {
	margin: 1em 0 1em 0;
}
.iteminfo {
	margin: 1em 0 1em 0.4em;
}
.description {
	clear: both;
}
.itemactions span {
	margin: 0 0 0.5em;
}
.itemactions .voting,
.itemactions .favourites {
	margin-right: 32px;
	float: left;
}

.itemadditional span {
	margin: 0 0 0.3em;
}
.itemadditional .categories {
	display: block;
}
.itemadditional .tags {
	display: block;
}



/*******************************************************************/
/*** Part 2, CSS rules for fields display via Template positions ***/
/*******************************************************************/


/* Rule for customblock used to display fields via template positions */
.customblock {
	width: 98% !important;
	padding: 2px 1% !important;
	margin: 8px 0px !important;
	display: block;
	float: left;
	border: 1px solid #dddddd;
	border-radius: 4px;
}


/* Default rule for elements: Use auto columns, via min-width we can have full row automaticaly for larger elements (pseudo colspan=2 via css) */
.customblock .element {
	max-width: 100% !important;
	min-width: 50% !important;
	padding: 3px 0% 3px 0% !important;
	margin: 0% !important;
	display: block;
	float: left;
	border-width: 0%;
}

/* Force 1 column for all elements */
.customblock .element.singlecol {
	width: 100% !important;
	padding: 0% !important;
}

/* Force 2 columns for all elements */
.customblock .element.doublecol {
	width: 48% !important;
	overflow: hidden;
}


/* Field label inside the custom blocks */
.customblock .flexi.label {}

/* Field value inside the custom blocks */
.customblock .flexi.value {}

/* Field value when having no label */
.customblock .flexi.value.nolabel {
	width: 100% !important;
}


/*
 * clearfix, for clearing a block that contains floated elements
 * without appending an extra HTML TAG with 'clearfix' class
 */

.group {
	overflow: auto !important;
}
